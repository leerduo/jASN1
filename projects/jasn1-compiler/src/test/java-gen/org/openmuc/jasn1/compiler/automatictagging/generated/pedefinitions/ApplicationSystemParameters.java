/**
 * This class file was automatically generated by jASN1 v1.6.0 (http://www.openmuc.org)
 */

package org.openmuc.jasn1.compiler.automatictagging.generated.pedefinitions;

import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.UnsupportedEncodingException;
import org.openmuc.jasn1.ber.*;
import org.openmuc.jasn1.ber.types.*;
import org.openmuc.jasn1.ber.types.string.*;


public class ApplicationSystemParameters {

	public static final BerIdentifier identifier = new BerIdentifier(BerIdentifier.UNIVERSAL_CLASS, BerIdentifier.CONSTRUCTED, 16);
	protected BerIdentifier id;

	public byte[] code = null;
	public BerOctetString volatileMemoryQuotaC7 = null;

	public BerOctetString nonVolatileMemoryQuotaC8 = null;

	public BerOctetString globalServiceParameters = null;

	public BerOctetString implicitSelectionParameter = null;

	public BerOctetString volatileReservedMemory = null;

	public BerOctetString nonVolatileReservedMemory = null;

	public BerOctetString ts102226SIMFileAccessToolkitParameter = null;

	public TS102226AdditionalContactlessParameters ts102226AdditionalContactlessParameters = null;

	public BerOctetString contactlessProtocolParameters = null;

	public BerOctetString userInteractionContactlessParameters = null;

	public ApplicationSystemParameters() {
		id = identifier;
	}

	public ApplicationSystemParameters(byte[] code) {
		id = identifier;
		this.code = code;
	}

	public ApplicationSystemParameters(BerOctetString volatileMemoryQuotaC7, BerOctetString nonVolatileMemoryQuotaC8, BerOctetString globalServiceParameters, BerOctetString implicitSelectionParameter, BerOctetString volatileReservedMemory, BerOctetString nonVolatileReservedMemory, BerOctetString ts102226SIMFileAccessToolkitParameter, TS102226AdditionalContactlessParameters ts102226AdditionalContactlessParameters, BerOctetString contactlessProtocolParameters, BerOctetString userInteractionContactlessParameters) {
		id = identifier;
		this.volatileMemoryQuotaC7 = volatileMemoryQuotaC7;
		this.nonVolatileMemoryQuotaC8 = nonVolatileMemoryQuotaC8;
		this.globalServiceParameters = globalServiceParameters;
		this.implicitSelectionParameter = implicitSelectionParameter;
		this.volatileReservedMemory = volatileReservedMemory;
		this.nonVolatileReservedMemory = nonVolatileReservedMemory;
		this.ts102226SIMFileAccessToolkitParameter = ts102226SIMFileAccessToolkitParameter;
		this.ts102226AdditionalContactlessParameters = ts102226AdditionalContactlessParameters;
		this.contactlessProtocolParameters = contactlessProtocolParameters;
		this.userInteractionContactlessParameters = userInteractionContactlessParameters;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			if (userInteractionContactlessParameters != null) {
				codeLength += userInteractionContactlessParameters.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 26
				os.write(0xda);
				codeLength += 1;
			}
			
			if (contactlessProtocolParameters != null) {
				codeLength += contactlessProtocolParameters.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 25
				os.write(0xd9);
				codeLength += 1;
			}
			
			if (ts102226AdditionalContactlessParameters != null) {
				codeLength += ts102226AdditionalContactlessParameters.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 0
				os.write(0xa0);
				codeLength += 1;
			}
			
			if (ts102226SIMFileAccessToolkitParameter != null) {
				codeLength += ts102226SIMFileAccessToolkitParameter.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 10
				os.write(0xca);
				codeLength += 1;
			}
			
			if (nonVolatileReservedMemory != null) {
				codeLength += nonVolatileReservedMemory.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 24
				os.write(0xd8);
				codeLength += 1;
			}
			
			if (volatileReservedMemory != null) {
				codeLength += volatileReservedMemory.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 23
				os.write(0xd7);
				codeLength += 1;
			}
			
			if (implicitSelectionParameter != null) {
				codeLength += implicitSelectionParameter.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 15
				os.write(0xcf);
				codeLength += 1;
			}
			
			if (globalServiceParameters != null) {
				codeLength += globalServiceParameters.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 11
				os.write(0xcb);
				codeLength += 1;
			}
			
			if (nonVolatileMemoryQuotaC8 != null) {
				codeLength += nonVolatileMemoryQuotaC8.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 8
				os.write(0xc8);
				codeLength += 1;
			}
			
			if (volatileMemoryQuotaC7 != null) {
				codeLength += volatileMemoryQuotaC7.encode(os, false);
				// write tag: PRIVATE_CLASS, PRIMITIVE, 7
				os.write(0xc7);
				codeLength += 1;
			}
			
			codeLength += BerLength.encodeLength(os, codeLength);
		}

		if (explicit) {
			codeLength += id.encode(os);
		}

		return codeLength;

	}

	public int decode(InputStream is, boolean explicit) throws IOException {
		int codeLength = 0;
		int subCodeLength = 0;
		BerIdentifier berIdentifier = new BerIdentifier();

		if (explicit) {
			codeLength += id.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		codeLength += length.decode(is);

		int totalLength = length.val;
		codeLength += totalLength;

		if (totalLength == -1) {
			subCodeLength += berIdentifier.decode(is);

			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 7)) {
				volatileMemoryQuotaC7 = new BerOctetString();
				subCodeLength += volatileMemoryQuotaC7.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 8)) {
				nonVolatileMemoryQuotaC8 = new BerOctetString();
				subCodeLength += nonVolatileMemoryQuotaC8.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 11)) {
				globalServiceParameters = new BerOctetString();
				subCodeLength += globalServiceParameters.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 15)) {
				implicitSelectionParameter = new BerOctetString();
				subCodeLength += implicitSelectionParameter.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 23)) {
				volatileReservedMemory = new BerOctetString();
				subCodeLength += volatileReservedMemory.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 24)) {
				nonVolatileReservedMemory = new BerOctetString();
				subCodeLength += nonVolatileReservedMemory.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 10)) {
				ts102226SIMFileAccessToolkitParameter = new BerOctetString();
				subCodeLength += ts102226SIMFileAccessToolkitParameter.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
				ts102226AdditionalContactlessParameters = new TS102226AdditionalContactlessParameters();
				subCodeLength += ts102226AdditionalContactlessParameters.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 25)) {
				contactlessProtocolParameters = new BerOctetString();
				subCodeLength += contactlessProtocolParameters.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 26)) {
				userInteractionContactlessParameters = new BerOctetString();
				subCodeLength += userInteractionContactlessParameters.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			int nextByte = is.read();
			if (berIdentifier.tagNumber != 0 || berIdentifier.identifierClass != 0 || berIdentifier.primitive != 0
			|| nextByte != 0) {
				if (nextByte == -1) {
					throw new EOFException("Unexpected end of input stream.");
				}
				throw new IOException("Decoded sequence has wrong end of contents octets");
			}
			codeLength += subCodeLength + 1;
			return codeLength;
		}

		if (totalLength == 0) {
			return codeLength;
		}
		subCodeLength += berIdentifier.decode(is);
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 7)) {
			volatileMemoryQuotaC7 = new BerOctetString();
			subCodeLength += volatileMemoryQuotaC7.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 8)) {
			nonVolatileMemoryQuotaC8 = new BerOctetString();
			subCodeLength += nonVolatileMemoryQuotaC8.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 11)) {
			globalServiceParameters = new BerOctetString();
			subCodeLength += globalServiceParameters.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 15)) {
			implicitSelectionParameter = new BerOctetString();
			subCodeLength += implicitSelectionParameter.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 23)) {
			volatileReservedMemory = new BerOctetString();
			subCodeLength += volatileReservedMemory.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 24)) {
			nonVolatileReservedMemory = new BerOctetString();
			subCodeLength += nonVolatileReservedMemory.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 10)) {
			ts102226SIMFileAccessToolkitParameter = new BerOctetString();
			subCodeLength += ts102226SIMFileAccessToolkitParameter.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
			ts102226AdditionalContactlessParameters = new TS102226AdditionalContactlessParameters();
			subCodeLength += ts102226AdditionalContactlessParameters.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 25)) {
			contactlessProtocolParameters = new BerOctetString();
			subCodeLength += contactlessProtocolParameters.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.PRIVATE_CLASS, BerIdentifier.PRIMITIVE, 26)) {
			userInteractionContactlessParameters = new BerOctetString();
			subCodeLength += userInteractionContactlessParameters.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
		}
		throw new IOException("Unexpected end of sequence, length tag: " + totalLength + ", actual sequence length: " + subCodeLength);

		
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	public String toString() {
		StringBuilder sb = new StringBuilder("SEQUENCE{");
		boolean firstSelectedElement = true;
		if (volatileMemoryQuotaC7 != null) {
			sb.append("volatileMemoryQuotaC7: ").append(volatileMemoryQuotaC7);
			firstSelectedElement = false;
		}
		
		if (nonVolatileMemoryQuotaC8 != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("nonVolatileMemoryQuotaC8: ").append(nonVolatileMemoryQuotaC8);
			firstSelectedElement = false;
		}
		
		if (globalServiceParameters != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("globalServiceParameters: ").append(globalServiceParameters);
			firstSelectedElement = false;
		}
		
		if (implicitSelectionParameter != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("implicitSelectionParameter: ").append(implicitSelectionParameter);
			firstSelectedElement = false;
		}
		
		if (volatileReservedMemory != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("volatileReservedMemory: ").append(volatileReservedMemory);
			firstSelectedElement = false;
		}
		
		if (nonVolatileReservedMemory != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("nonVolatileReservedMemory: ").append(nonVolatileReservedMemory);
			firstSelectedElement = false;
		}
		
		if (ts102226SIMFileAccessToolkitParameter != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("ts102226SIMFileAccessToolkitParameter: ").append(ts102226SIMFileAccessToolkitParameter);
			firstSelectedElement = false;
		}
		
		if (ts102226AdditionalContactlessParameters != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("ts102226AdditionalContactlessParameters: ").append(ts102226AdditionalContactlessParameters);
			firstSelectedElement = false;
		}
		
		if (contactlessProtocolParameters != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("contactlessProtocolParameters: ").append(contactlessProtocolParameters);
			firstSelectedElement = false;
		}
		
		if (userInteractionContactlessParameters != null) {
			if (!firstSelectedElement) {
				sb.append(", ");
			}
			sb.append("userInteractionContactlessParameters: ").append(userInteractionContactlessParameters);
			firstSelectedElement = false;
		}
		
		sb.append("}");
		return sb.toString();
	}

}


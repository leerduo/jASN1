/**
 * This class file was automatically generated by jASN1 v1.6.0 (http://www.openmuc.org)
 */

package org.openmuc.jasn1.compiler.automatictagging.generated.pedefinitions;

import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.UnsupportedEncodingException;
import org.openmuc.jasn1.ber.*;
import org.openmuc.jasn1.ber.types.*;
import org.openmuc.jasn1.ber.types.string.*;


public class PEOPTUSIM {

	public static final BerIdentifier identifier = new BerIdentifier(BerIdentifier.UNIVERSAL_CLASS, BerIdentifier.CONSTRUCTED, 16);
	protected BerIdentifier id;

	public byte[] code = null;
	public PEHeader optusimHeader = null;

	public BerObjectIdentifier templateID = null;

	public File efLi = null;

	public File efAcmax = null;

	public File efAcm = null;

	public File efGid1 = null;

	public File efGid2 = null;

	public File efMsisdn = null;

	public File efPuct = null;

	public File efCbmi = null;

	public File efCbmid = null;

	public File efSdn = null;

	public File efExt2 = null;

	public File efExt3 = null;

	public File efCbmir = null;

	public File efPlmnwact = null;

	public File efOplmnwact = null;

	public File efHplmnwact = null;

	public File efDck = null;

	public File efCnl = null;

	public File efSmsr = null;

	public File efBdn = null;

	public File efExt5 = null;

	public File efCcp2 = null;

	public File efExt4 = null;

	public File efAcl = null;

	public File efCmi = null;

	public File efIci = null;

	public File efOci = null;

	public File efIct = null;

	public File efOct = null;

	public File efVgcs = null;

	public File efVgcss = null;

	public File efVbs = null;

	public File efVbss = null;

	public File efEmlpp = null;

	public File efAaem = null;

	public File efHiddenkey = null;

	public File efPnn = null;

	public File efOpl = null;

	public File efMbdn = null;

	public File efExt6 = null;

	public File efMbi = null;

	public File efMwis = null;

	public File efCfis = null;

	public File efExt7 = null;

	public File efSpdi = null;

	public File efMmsn = null;

	public File efExt8 = null;

	public File efMmsicp = null;

	public File efMmsup = null;

	public File efMmsucp = null;

	public File efNia = null;

	public File efVgcsca = null;

	public File efVbsca = null;

	public File efGbabp = null;

	public File efMsk = null;

	public File efMuk = null;

	public File efEhplmn = null;

	public File efGbanl = null;

	public File efEhplmnpi = null;

	public File efLrplmnsi = null;

	public File efNafkca = null;

	public File efSpni = null;

	public File efPnni = null;

	public File efNcpIp = null;

	public File efUfc = null;

	public File efNasconfig = null;

	public File efUicciari = null;

	public File efPws = null;

	public File efFdnuri = null;

	public File efBdnuri = null;

	public File efSdnuri = null;

	public File efIwl = null;

	public File efIps = null;

	public File efIpd = null;

	public PEOPTUSIM() {
		id = identifier;
	}

	public PEOPTUSIM(byte[] code) {
		id = identifier;
		this.code = code;
	}

	public PEOPTUSIM(PEHeader optusimHeader, BerObjectIdentifier templateID, File efLi, File efAcmax, File efAcm, File efGid1, File efGid2, File efMsisdn, File efPuct, File efCbmi, File efCbmid, File efSdn, File efExt2, File efExt3, File efCbmir, File efPlmnwact, File efOplmnwact, File efHplmnwact, File efDck, File efCnl, File efSmsr, File efBdn, File efExt5, File efCcp2, File efExt4, File efAcl, File efCmi, File efIci, File efOci, File efIct, File efOct, File efVgcs, File efVgcss, File efVbs, File efVbss, File efEmlpp, File efAaem, File efHiddenkey, File efPnn, File efOpl, File efMbdn, File efExt6, File efMbi, File efMwis, File efCfis, File efExt7, File efSpdi, File efMmsn, File efExt8, File efMmsicp, File efMmsup, File efMmsucp, File efNia, File efVgcsca, File efVbsca, File efGbabp, File efMsk, File efMuk, File efEhplmn, File efGbanl, File efEhplmnpi, File efLrplmnsi, File efNafkca, File efSpni, File efPnni, File efNcpIp, File efUfc, File efNasconfig, File efUicciari, File efPws, File efFdnuri, File efBdnuri, File efSdnuri, File efIwl, File efIps, File efIpd) {
		id = identifier;
		this.optusimHeader = optusimHeader;
		this.templateID = templateID;
		this.efLi = efLi;
		this.efAcmax = efAcmax;
		this.efAcm = efAcm;
		this.efGid1 = efGid1;
		this.efGid2 = efGid2;
		this.efMsisdn = efMsisdn;
		this.efPuct = efPuct;
		this.efCbmi = efCbmi;
		this.efCbmid = efCbmid;
		this.efSdn = efSdn;
		this.efExt2 = efExt2;
		this.efExt3 = efExt3;
		this.efCbmir = efCbmir;
		this.efPlmnwact = efPlmnwact;
		this.efOplmnwact = efOplmnwact;
		this.efHplmnwact = efHplmnwact;
		this.efDck = efDck;
		this.efCnl = efCnl;
		this.efSmsr = efSmsr;
		this.efBdn = efBdn;
		this.efExt5 = efExt5;
		this.efCcp2 = efCcp2;
		this.efExt4 = efExt4;
		this.efAcl = efAcl;
		this.efCmi = efCmi;
		this.efIci = efIci;
		this.efOci = efOci;
		this.efIct = efIct;
		this.efOct = efOct;
		this.efVgcs = efVgcs;
		this.efVgcss = efVgcss;
		this.efVbs = efVbs;
		this.efVbss = efVbss;
		this.efEmlpp = efEmlpp;
		this.efAaem = efAaem;
		this.efHiddenkey = efHiddenkey;
		this.efPnn = efPnn;
		this.efOpl = efOpl;
		this.efMbdn = efMbdn;
		this.efExt6 = efExt6;
		this.efMbi = efMbi;
		this.efMwis = efMwis;
		this.efCfis = efCfis;
		this.efExt7 = efExt7;
		this.efSpdi = efSpdi;
		this.efMmsn = efMmsn;
		this.efExt8 = efExt8;
		this.efMmsicp = efMmsicp;
		this.efMmsup = efMmsup;
		this.efMmsucp = efMmsucp;
		this.efNia = efNia;
		this.efVgcsca = efVgcsca;
		this.efVbsca = efVbsca;
		this.efGbabp = efGbabp;
		this.efMsk = efMsk;
		this.efMuk = efMuk;
		this.efEhplmn = efEhplmn;
		this.efGbanl = efGbanl;
		this.efEhplmnpi = efEhplmnpi;
		this.efLrplmnsi = efLrplmnsi;
		this.efNafkca = efNafkca;
		this.efSpni = efSpni;
		this.efPnni = efPnni;
		this.efNcpIp = efNcpIp;
		this.efUfc = efUfc;
		this.efNasconfig = efNasconfig;
		this.efUicciari = efUicciari;
		this.efPws = efPws;
		this.efFdnuri = efFdnuri;
		this.efBdnuri = efBdnuri;
		this.efSdnuri = efSdnuri;
		this.efIwl = efIwl;
		this.efIps = efIps;
		this.efIpd = efIpd;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			if (efIpd != null) {
				codeLength += efIpd.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 75
				os.write(0x4b);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efIps != null) {
				codeLength += efIps.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 74
				os.write(0x4a);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efIwl != null) {
				codeLength += efIwl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 73
				os.write(0x49);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efSdnuri != null) {
				codeLength += efSdnuri.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 72
				os.write(0x48);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efBdnuri != null) {
				codeLength += efBdnuri.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 71
				os.write(0x47);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efFdnuri != null) {
				codeLength += efFdnuri.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 70
				os.write(0x46);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efPws != null) {
				codeLength += efPws.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 69
				os.write(0x45);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efUicciari != null) {
				codeLength += efUicciari.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 68
				os.write(0x44);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efNasconfig != null) {
				codeLength += efNasconfig.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 67
				os.write(0x43);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efUfc != null) {
				codeLength += efUfc.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 66
				os.write(0x42);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efNcpIp != null) {
				codeLength += efNcpIp.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 65
				os.write(0x41);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efPnni != null) {
				codeLength += efPnni.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 64
				os.write(0x40);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efSpni != null) {
				codeLength += efSpni.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 63
				os.write(0x3f);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efNafkca != null) {
				codeLength += efNafkca.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 62
				os.write(0x3e);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efLrplmnsi != null) {
				codeLength += efLrplmnsi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 61
				os.write(0x3d);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efEhplmnpi != null) {
				codeLength += efEhplmnpi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 60
				os.write(0x3c);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efGbanl != null) {
				codeLength += efGbanl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 59
				os.write(0x3b);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efEhplmn != null) {
				codeLength += efEhplmn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 58
				os.write(0x3a);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMuk != null) {
				codeLength += efMuk.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 57
				os.write(0x39);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMsk != null) {
				codeLength += efMsk.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 56
				os.write(0x38);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efGbabp != null) {
				codeLength += efGbabp.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 55
				os.write(0x37);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efVbsca != null) {
				codeLength += efVbsca.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 54
				os.write(0x36);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efVgcsca != null) {
				codeLength += efVgcsca.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 53
				os.write(0x35);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efNia != null) {
				codeLength += efNia.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 52
				os.write(0x34);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMmsucp != null) {
				codeLength += efMmsucp.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 51
				os.write(0x33);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMmsup != null) {
				codeLength += efMmsup.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 50
				os.write(0x32);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMmsicp != null) {
				codeLength += efMmsicp.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 49
				os.write(0x31);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efExt8 != null) {
				codeLength += efExt8.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 48
				os.write(0x30);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMmsn != null) {
				codeLength += efMmsn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 47
				os.write(0x2f);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efSpdi != null) {
				codeLength += efSpdi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 46
				os.write(0x2e);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efExt7 != null) {
				codeLength += efExt7.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 45
				os.write(0x2d);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efCfis != null) {
				codeLength += efCfis.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 44
				os.write(0x2c);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMwis != null) {
				codeLength += efMwis.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 43
				os.write(0x2b);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMbi != null) {
				codeLength += efMbi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 42
				os.write(0x2a);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efExt6 != null) {
				codeLength += efExt6.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 41
				os.write(0x29);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMbdn != null) {
				codeLength += efMbdn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 40
				os.write(0x28);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efOpl != null) {
				codeLength += efOpl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 39
				os.write(0x27);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efPnn != null) {
				codeLength += efPnn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 38
				os.write(0x26);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efHiddenkey != null) {
				codeLength += efHiddenkey.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 37
				os.write(0x25);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efAaem != null) {
				codeLength += efAaem.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 36
				os.write(0x24);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efEmlpp != null) {
				codeLength += efEmlpp.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 35
				os.write(0x23);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efVbss != null) {
				codeLength += efVbss.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 34
				os.write(0x22);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efVbs != null) {
				codeLength += efVbs.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 33
				os.write(0x21);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efVgcss != null) {
				codeLength += efVgcss.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 32
				os.write(0x20);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efVgcs != null) {
				codeLength += efVgcs.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 31
				os.write(0x1f);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efOct != null) {
				codeLength += efOct.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 30
				os.write(0xbe);
				codeLength += 1;
			}
			
			if (efIct != null) {
				codeLength += efIct.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 29
				os.write(0xbd);
				codeLength += 1;
			}
			
			if (efOci != null) {
				codeLength += efOci.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 28
				os.write(0xbc);
				codeLength += 1;
			}
			
			if (efIci != null) {
				codeLength += efIci.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 27
				os.write(0xbb);
				codeLength += 1;
			}
			
			if (efCmi != null) {
				codeLength += efCmi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 26
				os.write(0xba);
				codeLength += 1;
			}
			
			if (efAcl != null) {
				codeLength += efAcl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 25
				os.write(0xb9);
				codeLength += 1;
			}
			
			if (efExt4 != null) {
				codeLength += efExt4.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 24
				os.write(0xb8);
				codeLength += 1;
			}
			
			if (efCcp2 != null) {
				codeLength += efCcp2.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 23
				os.write(0xb7);
				codeLength += 1;
			}
			
			if (efExt5 != null) {
				codeLength += efExt5.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 22
				os.write(0xb6);
				codeLength += 1;
			}
			
			if (efBdn != null) {
				codeLength += efBdn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 21
				os.write(0xb5);
				codeLength += 1;
			}
			
			if (efSmsr != null) {
				codeLength += efSmsr.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 20
				os.write(0xb4);
				codeLength += 1;
			}
			
			if (efCnl != null) {
				codeLength += efCnl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 19
				os.write(0xb3);
				codeLength += 1;
			}
			
			if (efDck != null) {
				codeLength += efDck.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 18
				os.write(0xb2);
				codeLength += 1;
			}
			
			if (efHplmnwact != null) {
				codeLength += efHplmnwact.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 17
				os.write(0xb1);
				codeLength += 1;
			}
			
			if (efOplmnwact != null) {
				codeLength += efOplmnwact.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 16
				os.write(0xb0);
				codeLength += 1;
			}
			
			if (efPlmnwact != null) {
				codeLength += efPlmnwact.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 15
				os.write(0xaf);
				codeLength += 1;
			}
			
			if (efCbmir != null) {
				codeLength += efCbmir.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 14
				os.write(0xae);
				codeLength += 1;
			}
			
			if (efExt3 != null) {
				codeLength += efExt3.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 13
				os.write(0xad);
				codeLength += 1;
			}
			
			if (efExt2 != null) {
				codeLength += efExt2.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 12
				os.write(0xac);
				codeLength += 1;
			}
			
			if (efSdn != null) {
				codeLength += efSdn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 11
				os.write(0xab);
				codeLength += 1;
			}
			
			if (efCbmid != null) {
				codeLength += efCbmid.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 10
				os.write(0xaa);
				codeLength += 1;
			}
			
			if (efCbmi != null) {
				codeLength += efCbmi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 9
				os.write(0xa9);
				codeLength += 1;
			}
			
			if (efPuct != null) {
				codeLength += efPuct.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 8
				os.write(0xa8);
				codeLength += 1;
			}
			
			if (efMsisdn != null) {
				codeLength += efMsisdn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 7
				os.write(0xa7);
				codeLength += 1;
			}
			
			if (efGid2 != null) {
				codeLength += efGid2.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 6
				os.write(0xa6);
				codeLength += 1;
			}
			
			if (efGid1 != null) {
				codeLength += efGid1.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 5
				os.write(0xa5);
				codeLength += 1;
			}
			
			if (efAcm != null) {
				codeLength += efAcm.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 4
				os.write(0xa4);
				codeLength += 1;
			}
			
			if (efAcmax != null) {
				codeLength += efAcmax.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 3
				os.write(0xa3);
				codeLength += 1;
			}
			
			if (efLi != null) {
				codeLength += efLi.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 2
				os.write(0xa2);
				codeLength += 1;
			}
			
			codeLength += templateID.encode(os, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 1
			os.write(0x81);
			codeLength += 1;
			
			codeLength += optusimHeader.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 0
			os.write(0xa0);
			codeLength += 1;
			
			codeLength += BerLength.encodeLength(os, codeLength);
		}

		if (explicit) {
			codeLength += id.encode(os);
		}

		return codeLength;

	}

	public int decode(InputStream is, boolean explicit) throws IOException {
		int codeLength = 0;
		int subCodeLength = 0;
		BerIdentifier berIdentifier = new BerIdentifier();

		if (explicit) {
			codeLength += id.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		codeLength += length.decode(is);

		int totalLength = length.val;
		codeLength += totalLength;

		if (totalLength == -1) {
			subCodeLength += berIdentifier.decode(is);

			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
				optusimHeader = new PEHeader();
				subCodeLength += optusimHeader.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 1)) {
				templateID = new BerObjectIdentifier();
				subCodeLength += templateID.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
				efLi = new File();
				subCodeLength += efLi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
				efAcmax = new File();
				subCodeLength += efAcmax.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
				efAcm = new File();
				subCodeLength += efAcm.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
				efGid1 = new File();
				subCodeLength += efGid1.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
				efGid2 = new File();
				subCodeLength += efGid2.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
				efMsisdn = new File();
				subCodeLength += efMsisdn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
				efPuct = new File();
				subCodeLength += efPuct.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
				efCbmi = new File();
				subCodeLength += efCbmi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 10)) {
				efCbmid = new File();
				subCodeLength += efCbmid.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 11)) {
				efSdn = new File();
				subCodeLength += efSdn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
				efExt2 = new File();
				subCodeLength += efExt2.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
				efExt3 = new File();
				subCodeLength += efExt3.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 14)) {
				efCbmir = new File();
				subCodeLength += efCbmir.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 15)) {
				efPlmnwact = new File();
				subCodeLength += efPlmnwact.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 16)) {
				efOplmnwact = new File();
				subCodeLength += efOplmnwact.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 17)) {
				efHplmnwact = new File();
				subCodeLength += efHplmnwact.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 18)) {
				efDck = new File();
				subCodeLength += efDck.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 19)) {
				efCnl = new File();
				subCodeLength += efCnl.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 20)) {
				efSmsr = new File();
				subCodeLength += efSmsr.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 21)) {
				efBdn = new File();
				subCodeLength += efBdn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 22)) {
				efExt5 = new File();
				subCodeLength += efExt5.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 23)) {
				efCcp2 = new File();
				subCodeLength += efCcp2.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 24)) {
				efExt4 = new File();
				subCodeLength += efExt4.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 25)) {
				efAcl = new File();
				subCodeLength += efAcl.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 26)) {
				efCmi = new File();
				subCodeLength += efCmi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 27)) {
				efIci = new File();
				subCodeLength += efIci.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 28)) {
				efOci = new File();
				subCodeLength += efOci.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 29)) {
				efIct = new File();
				subCodeLength += efIct.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30)) {
				efOct = new File();
				subCodeLength += efOct.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 31)) {
				efVgcs = new File();
				subCodeLength += efVgcs.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 32)) {
				efVgcss = new File();
				subCodeLength += efVgcss.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 33)) {
				efVbs = new File();
				subCodeLength += efVbs.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 34)) {
				efVbss = new File();
				subCodeLength += efVbss.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 35)) {
				efEmlpp = new File();
				subCodeLength += efEmlpp.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 36)) {
				efAaem = new File();
				subCodeLength += efAaem.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 37)) {
				efHiddenkey = new File();
				subCodeLength += efHiddenkey.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 38)) {
				efPnn = new File();
				subCodeLength += efPnn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 39)) {
				efOpl = new File();
				subCodeLength += efOpl.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 40)) {
				efMbdn = new File();
				subCodeLength += efMbdn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 41)) {
				efExt6 = new File();
				subCodeLength += efExt6.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 42)) {
				efMbi = new File();
				subCodeLength += efMbi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 43)) {
				efMwis = new File();
				subCodeLength += efMwis.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 44)) {
				efCfis = new File();
				subCodeLength += efCfis.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 45)) {
				efExt7 = new File();
				subCodeLength += efExt7.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 46)) {
				efSpdi = new File();
				subCodeLength += efSpdi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 47)) {
				efMmsn = new File();
				subCodeLength += efMmsn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 48)) {
				efExt8 = new File();
				subCodeLength += efExt8.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 49)) {
				efMmsicp = new File();
				subCodeLength += efMmsicp.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 50)) {
				efMmsup = new File();
				subCodeLength += efMmsup.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 51)) {
				efMmsucp = new File();
				subCodeLength += efMmsucp.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 52)) {
				efNia = new File();
				subCodeLength += efNia.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 53)) {
				efVgcsca = new File();
				subCodeLength += efVgcsca.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 54)) {
				efVbsca = new File();
				subCodeLength += efVbsca.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 55)) {
				efGbabp = new File();
				subCodeLength += efGbabp.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 56)) {
				efMsk = new File();
				subCodeLength += efMsk.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 57)) {
				efMuk = new File();
				subCodeLength += efMuk.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 58)) {
				efEhplmn = new File();
				subCodeLength += efEhplmn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 59)) {
				efGbanl = new File();
				subCodeLength += efGbanl.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 60)) {
				efEhplmnpi = new File();
				subCodeLength += efEhplmnpi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 61)) {
				efLrplmnsi = new File();
				subCodeLength += efLrplmnsi.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 62)) {
				efNafkca = new File();
				subCodeLength += efNafkca.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 63)) {
				efSpni = new File();
				subCodeLength += efSpni.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 64)) {
				efPnni = new File();
				subCodeLength += efPnni.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 65)) {
				efNcpIp = new File();
				subCodeLength += efNcpIp.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 66)) {
				efUfc = new File();
				subCodeLength += efUfc.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 67)) {
				efNasconfig = new File();
				subCodeLength += efNasconfig.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 68)) {
				efUicciari = new File();
				subCodeLength += efUicciari.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 69)) {
				efPws = new File();
				subCodeLength += efPws.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 70)) {
				efFdnuri = new File();
				subCodeLength += efFdnuri.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 71)) {
				efBdnuri = new File();
				subCodeLength += efBdnuri.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 72)) {
				efSdnuri = new File();
				subCodeLength += efSdnuri.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 73)) {
				efIwl = new File();
				subCodeLength += efIwl.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 74)) {
				efIps = new File();
				subCodeLength += efIps.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 75)) {
				efIpd = new File();
				subCodeLength += efIpd.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			int nextByte = is.read();
			if (berIdentifier.tagNumber != 0 || berIdentifier.identifierClass != 0 || berIdentifier.primitive != 0
			|| nextByte != 0) {
				if (nextByte == -1) {
					throw new EOFException("Unexpected end of input stream.");
				}
				throw new IOException("Decoded sequence has wrong end of contents octets");
			}
			codeLength += subCodeLength + 1;
			return codeLength;
		}

		subCodeLength += berIdentifier.decode(is);
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
			optusimHeader = new PEHeader();
			subCodeLength += optusimHeader.decode(is, false);
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 1)) {
			templateID = new BerObjectIdentifier();
			subCodeLength += templateID.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
			efLi = new File();
			subCodeLength += efLi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
			efAcmax = new File();
			subCodeLength += efAcmax.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
			efAcm = new File();
			subCodeLength += efAcm.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
			efGid1 = new File();
			subCodeLength += efGid1.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
			efGid2 = new File();
			subCodeLength += efGid2.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
			efMsisdn = new File();
			subCodeLength += efMsisdn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
			efPuct = new File();
			subCodeLength += efPuct.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
			efCbmi = new File();
			subCodeLength += efCbmi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 10)) {
			efCbmid = new File();
			subCodeLength += efCbmid.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 11)) {
			efSdn = new File();
			subCodeLength += efSdn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
			efExt2 = new File();
			subCodeLength += efExt2.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
			efExt3 = new File();
			subCodeLength += efExt3.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 14)) {
			efCbmir = new File();
			subCodeLength += efCbmir.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 15)) {
			efPlmnwact = new File();
			subCodeLength += efPlmnwact.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 16)) {
			efOplmnwact = new File();
			subCodeLength += efOplmnwact.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 17)) {
			efHplmnwact = new File();
			subCodeLength += efHplmnwact.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 18)) {
			efDck = new File();
			subCodeLength += efDck.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 19)) {
			efCnl = new File();
			subCodeLength += efCnl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 20)) {
			efSmsr = new File();
			subCodeLength += efSmsr.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 21)) {
			efBdn = new File();
			subCodeLength += efBdn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 22)) {
			efExt5 = new File();
			subCodeLength += efExt5.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 23)) {
			efCcp2 = new File();
			subCodeLength += efCcp2.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 24)) {
			efExt4 = new File();
			subCodeLength += efExt4.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 25)) {
			efAcl = new File();
			subCodeLength += efAcl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 26)) {
			efCmi = new File();
			subCodeLength += efCmi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 27)) {
			efIci = new File();
			subCodeLength += efIci.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 28)) {
			efOci = new File();
			subCodeLength += efOci.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 29)) {
			efIct = new File();
			subCodeLength += efIct.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30)) {
			efOct = new File();
			subCodeLength += efOct.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 31)) {
			efVgcs = new File();
			subCodeLength += efVgcs.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 32)) {
			efVgcss = new File();
			subCodeLength += efVgcss.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 33)) {
			efVbs = new File();
			subCodeLength += efVbs.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 34)) {
			efVbss = new File();
			subCodeLength += efVbss.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 35)) {
			efEmlpp = new File();
			subCodeLength += efEmlpp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 36)) {
			efAaem = new File();
			subCodeLength += efAaem.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 37)) {
			efHiddenkey = new File();
			subCodeLength += efHiddenkey.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 38)) {
			efPnn = new File();
			subCodeLength += efPnn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 39)) {
			efOpl = new File();
			subCodeLength += efOpl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 40)) {
			efMbdn = new File();
			subCodeLength += efMbdn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 41)) {
			efExt6 = new File();
			subCodeLength += efExt6.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 42)) {
			efMbi = new File();
			subCodeLength += efMbi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 43)) {
			efMwis = new File();
			subCodeLength += efMwis.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 44)) {
			efCfis = new File();
			subCodeLength += efCfis.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 45)) {
			efExt7 = new File();
			subCodeLength += efExt7.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 46)) {
			efSpdi = new File();
			subCodeLength += efSpdi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 47)) {
			efMmsn = new File();
			subCodeLength += efMmsn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 48)) {
			efExt8 = new File();
			subCodeLength += efExt8.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 49)) {
			efMmsicp = new File();
			subCodeLength += efMmsicp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 50)) {
			efMmsup = new File();
			subCodeLength += efMmsup.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 51)) {
			efMmsucp = new File();
			subCodeLength += efMmsucp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 52)) {
			efNia = new File();
			subCodeLength += efNia.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 53)) {
			efVgcsca = new File();
			subCodeLength += efVgcsca.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 54)) {
			efVbsca = new File();
			subCodeLength += efVbsca.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 55)) {
			efGbabp = new File();
			subCodeLength += efGbabp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 56)) {
			efMsk = new File();
			subCodeLength += efMsk.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 57)) {
			efMuk = new File();
			subCodeLength += efMuk.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 58)) {
			efEhplmn = new File();
			subCodeLength += efEhplmn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 59)) {
			efGbanl = new File();
			subCodeLength += efGbanl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 60)) {
			efEhplmnpi = new File();
			subCodeLength += efEhplmnpi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 61)) {
			efLrplmnsi = new File();
			subCodeLength += efLrplmnsi.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 62)) {
			efNafkca = new File();
			subCodeLength += efNafkca.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 63)) {
			efSpni = new File();
			subCodeLength += efSpni.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 64)) {
			efPnni = new File();
			subCodeLength += efPnni.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 65)) {
			efNcpIp = new File();
			subCodeLength += efNcpIp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 66)) {
			efUfc = new File();
			subCodeLength += efUfc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 67)) {
			efNasconfig = new File();
			subCodeLength += efNasconfig.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 68)) {
			efUicciari = new File();
			subCodeLength += efUicciari.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 69)) {
			efPws = new File();
			subCodeLength += efPws.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 70)) {
			efFdnuri = new File();
			subCodeLength += efFdnuri.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 71)) {
			efBdnuri = new File();
			subCodeLength += efBdnuri.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 72)) {
			efSdnuri = new File();
			subCodeLength += efSdnuri.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 73)) {
			efIwl = new File();
			subCodeLength += efIwl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 74)) {
			efIps = new File();
			subCodeLength += efIps.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 75)) {
			efIpd = new File();
			subCodeLength += efIpd.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
		}
		throw new IOException("Unexpected end of sequence, length tag: " + totalLength + ", actual sequence length: " + subCodeLength);

		
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	public String toString() {
		StringBuilder sb = new StringBuilder("SEQUENCE{");
		sb.append("optusimHeader: ").append(optusimHeader);
		
		sb.append(", ");
		sb.append("templateID: ").append(templateID);
		
		if (efLi != null) {
			sb.append(", ");
			sb.append("efLi: ").append(efLi);
		}
		
		if (efAcmax != null) {
			sb.append(", ");
			sb.append("efAcmax: ").append(efAcmax);
		}
		
		if (efAcm != null) {
			sb.append(", ");
			sb.append("efAcm: ").append(efAcm);
		}
		
		if (efGid1 != null) {
			sb.append(", ");
			sb.append("efGid1: ").append(efGid1);
		}
		
		if (efGid2 != null) {
			sb.append(", ");
			sb.append("efGid2: ").append(efGid2);
		}
		
		if (efMsisdn != null) {
			sb.append(", ");
			sb.append("efMsisdn: ").append(efMsisdn);
		}
		
		if (efPuct != null) {
			sb.append(", ");
			sb.append("efPuct: ").append(efPuct);
		}
		
		if (efCbmi != null) {
			sb.append(", ");
			sb.append("efCbmi: ").append(efCbmi);
		}
		
		if (efCbmid != null) {
			sb.append(", ");
			sb.append("efCbmid: ").append(efCbmid);
		}
		
		if (efSdn != null) {
			sb.append(", ");
			sb.append("efSdn: ").append(efSdn);
		}
		
		if (efExt2 != null) {
			sb.append(", ");
			sb.append("efExt2: ").append(efExt2);
		}
		
		if (efExt3 != null) {
			sb.append(", ");
			sb.append("efExt3: ").append(efExt3);
		}
		
		if (efCbmir != null) {
			sb.append(", ");
			sb.append("efCbmir: ").append(efCbmir);
		}
		
		if (efPlmnwact != null) {
			sb.append(", ");
			sb.append("efPlmnwact: ").append(efPlmnwact);
		}
		
		if (efOplmnwact != null) {
			sb.append(", ");
			sb.append("efOplmnwact: ").append(efOplmnwact);
		}
		
		if (efHplmnwact != null) {
			sb.append(", ");
			sb.append("efHplmnwact: ").append(efHplmnwact);
		}
		
		if (efDck != null) {
			sb.append(", ");
			sb.append("efDck: ").append(efDck);
		}
		
		if (efCnl != null) {
			sb.append(", ");
			sb.append("efCnl: ").append(efCnl);
		}
		
		if (efSmsr != null) {
			sb.append(", ");
			sb.append("efSmsr: ").append(efSmsr);
		}
		
		if (efBdn != null) {
			sb.append(", ");
			sb.append("efBdn: ").append(efBdn);
		}
		
		if (efExt5 != null) {
			sb.append(", ");
			sb.append("efExt5: ").append(efExt5);
		}
		
		if (efCcp2 != null) {
			sb.append(", ");
			sb.append("efCcp2: ").append(efCcp2);
		}
		
		if (efExt4 != null) {
			sb.append(", ");
			sb.append("efExt4: ").append(efExt4);
		}
		
		if (efAcl != null) {
			sb.append(", ");
			sb.append("efAcl: ").append(efAcl);
		}
		
		if (efCmi != null) {
			sb.append(", ");
			sb.append("efCmi: ").append(efCmi);
		}
		
		if (efIci != null) {
			sb.append(", ");
			sb.append("efIci: ").append(efIci);
		}
		
		if (efOci != null) {
			sb.append(", ");
			sb.append("efOci: ").append(efOci);
		}
		
		if (efIct != null) {
			sb.append(", ");
			sb.append("efIct: ").append(efIct);
		}
		
		if (efOct != null) {
			sb.append(", ");
			sb.append("efOct: ").append(efOct);
		}
		
		if (efVgcs != null) {
			sb.append(", ");
			sb.append("efVgcs: ").append(efVgcs);
		}
		
		if (efVgcss != null) {
			sb.append(", ");
			sb.append("efVgcss: ").append(efVgcss);
		}
		
		if (efVbs != null) {
			sb.append(", ");
			sb.append("efVbs: ").append(efVbs);
		}
		
		if (efVbss != null) {
			sb.append(", ");
			sb.append("efVbss: ").append(efVbss);
		}
		
		if (efEmlpp != null) {
			sb.append(", ");
			sb.append("efEmlpp: ").append(efEmlpp);
		}
		
		if (efAaem != null) {
			sb.append(", ");
			sb.append("efAaem: ").append(efAaem);
		}
		
		if (efHiddenkey != null) {
			sb.append(", ");
			sb.append("efHiddenkey: ").append(efHiddenkey);
		}
		
		if (efPnn != null) {
			sb.append(", ");
			sb.append("efPnn: ").append(efPnn);
		}
		
		if (efOpl != null) {
			sb.append(", ");
			sb.append("efOpl: ").append(efOpl);
		}
		
		if (efMbdn != null) {
			sb.append(", ");
			sb.append("efMbdn: ").append(efMbdn);
		}
		
		if (efExt6 != null) {
			sb.append(", ");
			sb.append("efExt6: ").append(efExt6);
		}
		
		if (efMbi != null) {
			sb.append(", ");
			sb.append("efMbi: ").append(efMbi);
		}
		
		if (efMwis != null) {
			sb.append(", ");
			sb.append("efMwis: ").append(efMwis);
		}
		
		if (efCfis != null) {
			sb.append(", ");
			sb.append("efCfis: ").append(efCfis);
		}
		
		if (efExt7 != null) {
			sb.append(", ");
			sb.append("efExt7: ").append(efExt7);
		}
		
		if (efSpdi != null) {
			sb.append(", ");
			sb.append("efSpdi: ").append(efSpdi);
		}
		
		if (efMmsn != null) {
			sb.append(", ");
			sb.append("efMmsn: ").append(efMmsn);
		}
		
		if (efExt8 != null) {
			sb.append(", ");
			sb.append("efExt8: ").append(efExt8);
		}
		
		if (efMmsicp != null) {
			sb.append(", ");
			sb.append("efMmsicp: ").append(efMmsicp);
		}
		
		if (efMmsup != null) {
			sb.append(", ");
			sb.append("efMmsup: ").append(efMmsup);
		}
		
		if (efMmsucp != null) {
			sb.append(", ");
			sb.append("efMmsucp: ").append(efMmsucp);
		}
		
		if (efNia != null) {
			sb.append(", ");
			sb.append("efNia: ").append(efNia);
		}
		
		if (efVgcsca != null) {
			sb.append(", ");
			sb.append("efVgcsca: ").append(efVgcsca);
		}
		
		if (efVbsca != null) {
			sb.append(", ");
			sb.append("efVbsca: ").append(efVbsca);
		}
		
		if (efGbabp != null) {
			sb.append(", ");
			sb.append("efGbabp: ").append(efGbabp);
		}
		
		if (efMsk != null) {
			sb.append(", ");
			sb.append("efMsk: ").append(efMsk);
		}
		
		if (efMuk != null) {
			sb.append(", ");
			sb.append("efMuk: ").append(efMuk);
		}
		
		if (efEhplmn != null) {
			sb.append(", ");
			sb.append("efEhplmn: ").append(efEhplmn);
		}
		
		if (efGbanl != null) {
			sb.append(", ");
			sb.append("efGbanl: ").append(efGbanl);
		}
		
		if (efEhplmnpi != null) {
			sb.append(", ");
			sb.append("efEhplmnpi: ").append(efEhplmnpi);
		}
		
		if (efLrplmnsi != null) {
			sb.append(", ");
			sb.append("efLrplmnsi: ").append(efLrplmnsi);
		}
		
		if (efNafkca != null) {
			sb.append(", ");
			sb.append("efNafkca: ").append(efNafkca);
		}
		
		if (efSpni != null) {
			sb.append(", ");
			sb.append("efSpni: ").append(efSpni);
		}
		
		if (efPnni != null) {
			sb.append(", ");
			sb.append("efPnni: ").append(efPnni);
		}
		
		if (efNcpIp != null) {
			sb.append(", ");
			sb.append("efNcpIp: ").append(efNcpIp);
		}
		
		if (efUfc != null) {
			sb.append(", ");
			sb.append("efUfc: ").append(efUfc);
		}
		
		if (efNasconfig != null) {
			sb.append(", ");
			sb.append("efNasconfig: ").append(efNasconfig);
		}
		
		if (efUicciari != null) {
			sb.append(", ");
			sb.append("efUicciari: ").append(efUicciari);
		}
		
		if (efPws != null) {
			sb.append(", ");
			sb.append("efPws: ").append(efPws);
		}
		
		if (efFdnuri != null) {
			sb.append(", ");
			sb.append("efFdnuri: ").append(efFdnuri);
		}
		
		if (efBdnuri != null) {
			sb.append(", ");
			sb.append("efBdnuri: ").append(efBdnuri);
		}
		
		if (efSdnuri != null) {
			sb.append(", ");
			sb.append("efSdnuri: ").append(efSdnuri);
		}
		
		if (efIwl != null) {
			sb.append(", ");
			sb.append("efIwl: ").append(efIwl);
		}
		
		if (efIps != null) {
			sb.append(", ");
			sb.append("efIps: ").append(efIps);
		}
		
		if (efIpd != null) {
			sb.append(", ");
			sb.append("efIpd: ").append(efIpd);
		}
		
		sb.append("}");
		return sb.toString();
	}

}


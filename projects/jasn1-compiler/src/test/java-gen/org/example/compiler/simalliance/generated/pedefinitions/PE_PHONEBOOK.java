/**
 * This class file was automatically generated by jASN1 v1.5.0 (http://www.openmuc.org)
 */

package org.example.compiler.simalliance.generated.pedefinitions;

import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.UnsupportedEncodingException;
import org.openmuc.jasn1.ber.*;
import org.openmuc.jasn1.ber.types.*;
import org.openmuc.jasn1.ber.types.string.*;


public class PE_PHONEBOOK {

	public final static BerIdentifier identifier = new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0);
	protected BerIdentifier id;

	public byte[] code = null;
	public PEHeader phonebook_header = null;

	public BerObjectIdentifier templateID = null;

	public File df_phonebook = null;

	public File ef_pbr = null;

	public File ef_ext1 = null;

	public File ef_aas = null;

	public File ef_gas = null;

	public File ef_psc = null;

	public File ef_cc = null;

	public File ef_puid = null;

	public File ef_iap = null;

	public File ef_adn = null;

	public File ef_pbc = null;

	public File ef_anr = null;

	public File ef_puri = null;

	public File ef_email = null;

	public File ef_sne = null;

	public File ef_uid = null;

	public File ef_grp = null;

	public File ef_ccp1 = null;

	public PE_PHONEBOOK() {
		id = identifier;
	}

	public PE_PHONEBOOK(byte[] code) {
		id = identifier;
		this.code = code;
	}

	public PE_PHONEBOOK(PEHeader phonebook_header, BerObjectIdentifier templateID, File df_phonebook, File ef_pbr, File ef_ext1, File ef_aas, File ef_gas, File ef_psc, File ef_cc, File ef_puid, File ef_iap, File ef_adn, File ef_pbc, File ef_anr, File ef_puri, File ef_email, File ef_sne, File ef_uid, File ef_grp, File ef_ccp1) {
		id = identifier;
		this.phonebook_header = phonebook_header;
		this.templateID = templateID;
		this.df_phonebook = df_phonebook;
		this.ef_pbr = ef_pbr;
		this.ef_ext1 = ef_ext1;
		this.ef_aas = ef_aas;
		this.ef_gas = ef_gas;
		this.ef_psc = ef_psc;
		this.ef_cc = ef_cc;
		this.ef_puid = ef_puid;
		this.ef_iap = ef_iap;
		this.ef_adn = ef_adn;
		this.ef_pbc = ef_pbc;
		this.ef_anr = ef_anr;
		this.ef_puri = ef_puri;
		this.ef_email = ef_email;
		this.ef_sne = ef_sne;
		this.ef_uid = ef_uid;
		this.ef_grp = ef_grp;
		this.ef_ccp1 = ef_ccp1;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			if (ef_ccp1 != null) {
				codeLength += ef_ccp1.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 19}
				os.write(0xb3);
				codeLength += 1;
			}
			
			if (ef_grp != null) {
				codeLength += ef_grp.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 18}
				os.write(0xb2);
				codeLength += 1;
			}
			
			if (ef_uid != null) {
				codeLength += ef_uid.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 17}
				os.write(0xb1);
				codeLength += 1;
			}
			
			if (ef_sne != null) {
				codeLength += ef_sne.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 16}
				os.write(0xb0);
				codeLength += 1;
			}
			
			if (ef_email != null) {
				codeLength += ef_email.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 15}
				os.write(0xaf);
				codeLength += 1;
			}
			
			if (ef_puri != null) {
				codeLength += ef_puri.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 14}
				os.write(0xae);
				codeLength += 1;
			}
			
			if (ef_anr != null) {
				codeLength += ef_anr.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 13}
				os.write(0xad);
				codeLength += 1;
			}
			
			if (ef_pbc != null) {
				codeLength += ef_pbc.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 12}
				os.write(0xac);
				codeLength += 1;
			}
			
			if (ef_adn != null) {
				codeLength += ef_adn.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 11}
				os.write(0xab);
				codeLength += 1;
			}
			
			if (ef_iap != null) {
				codeLength += ef_iap.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 10}
				os.write(0xaa);
				codeLength += 1;
			}
			
			if (ef_puid != null) {
				codeLength += ef_puid.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 9}
				os.write(0xa9);
				codeLength += 1;
			}
			
			if (ef_cc != null) {
				codeLength += ef_cc.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 8}
				os.write(0xa8);
				codeLength += 1;
			}
			
			if (ef_psc != null) {
				codeLength += ef_psc.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 7}
				os.write(0xa7);
				codeLength += 1;
			}
			
			if (ef_gas != null) {
				codeLength += ef_gas.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 6}
				os.write(0xa6);
				codeLength += 1;
			}
			
			if (ef_aas != null) {
				codeLength += ef_aas.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 5}
				os.write(0xa5);
				codeLength += 1;
			}
			
			if (ef_ext1 != null) {
				codeLength += ef_ext1.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 4}
				os.write(0xa4);
				codeLength += 1;
			}
			
			if (ef_pbr != null) {
				codeLength += ef_pbr.encode(os, false);
				// write tag {CONTEXT_CLASS, CONSTRUCTED, 3}
				os.write(0xa3);
				codeLength += 1;
			}
			
			codeLength += df_phonebook.encode(os, false);
			// write tag {CONTEXT_CLASS, CONSTRUCTED, 2}
			os.write(0xa2);
			codeLength += 1;
			
			codeLength += templateID.encode(os, false);
			// write tag {CONTEXT_CLASS, PRIMITIVE, 1}
			os.write(0x81);
			codeLength += 1;
			
			codeLength += phonebook_header.encode(os, false);
			// write tag {CONTEXT_CLASS, CONSTRUCTED, 0}
			os.write(0xa0);
			codeLength += 1;
			
			codeLength += BerLength.encodeLength(os, codeLength);
		}

		if (explicit) {
			codeLength += id.encode(os);
		}

		return codeLength;

	}

	public int decode(InputStream is, boolean explicit) throws IOException {
		int codeLength = 0;
		int subCodeLength = 0;
		BerIdentifier berIdentifier = new BerIdentifier();

		if (explicit) {
			codeLength += id.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		codeLength += length.decode(is);

		codeLength += length.val;

		if (length.val == -1) {
			subCodeLength += berIdentifier.decode(is);

			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
				phonebook_header = new PEHeader();
				subCodeLength += phonebook_header.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			else {
				throw new IOException("Identifier does not match required sequence element identifer.");
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 1)) {
				templateID = new BerObjectIdentifier();
				subCodeLength += templateID.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			else {
				throw new IOException("Identifier does not match required sequence element identifer.");
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
				df_phonebook = new File();
				subCodeLength += df_phonebook.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			else {
				throw new IOException("Identifier does not match required sequence element identifer.");
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
				ef_pbr = new File();
				subCodeLength += ef_pbr.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
				ef_ext1 = new File();
				subCodeLength += ef_ext1.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
				ef_aas = new File();
				subCodeLength += ef_aas.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
				ef_gas = new File();
				subCodeLength += ef_gas.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
				ef_psc = new File();
				subCodeLength += ef_psc.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
				ef_cc = new File();
				subCodeLength += ef_cc.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
				ef_puid = new File();
				subCodeLength += ef_puid.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 10)) {
				ef_iap = new File();
				subCodeLength += ef_iap.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 11)) {
				ef_adn = new File();
				subCodeLength += ef_adn.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
				ef_pbc = new File();
				subCodeLength += ef_pbc.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
				ef_anr = new File();
				subCodeLength += ef_anr.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 14)) {
				ef_puri = new File();
				subCodeLength += ef_puri.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 15)) {
				ef_email = new File();
				subCodeLength += ef_email.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 16)) {
				ef_sne = new File();
				subCodeLength += ef_sne.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 17)) {
				ef_uid = new File();
				subCodeLength += ef_uid.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 18)) {
				ef_grp = new File();
				subCodeLength += ef_grp.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			if (berIdentifier.tagNumber == 0 && berIdentifier.identifierClass == 0 && berIdentifier.primitive == 0) {
				int nextByte = is.read();
				if (nextByte != 0) {
					if (nextByte == -1) {
						throw new EOFException("Unexpected end of input stream.");
					}
					throw new IOException("Decoded sequence has wrong end of contents octets");
				}
				codeLength += subCodeLength + 1;
				return codeLength;
			}
			if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 19)) {
				ef_ccp1 = new File();
				subCodeLength += ef_ccp1.decode(is, false);
				subCodeLength += berIdentifier.decode(is);
			}
			int nextByte = is.read();
			if (berIdentifier.tagNumber != 0 || berIdentifier.identifierClass != 0 || berIdentifier.primitive != 0
			|| nextByte != 0) {
				if (nextByte == -1) {
					throw new EOFException("Unexpected end of input stream.");
				}
				throw new IOException("Decoded sequence has wrong end of contents octets");
			}
			codeLength += subCodeLength + 1;
			return codeLength;
		}

		subCodeLength += berIdentifier.decode(is);
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
			phonebook_header = new PEHeader();
			subCodeLength += phonebook_header.decode(is, false);
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 1)) {
			templateID = new BerObjectIdentifier();
			subCodeLength += templateID.decode(is, false);
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
			df_phonebook = new File();
			subCodeLength += df_phonebook.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
			ef_pbr = new File();
			subCodeLength += ef_pbr.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
			ef_ext1 = new File();
			subCodeLength += ef_ext1.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
			ef_aas = new File();
			subCodeLength += ef_aas.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
			ef_gas = new File();
			subCodeLength += ef_gas.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
			ef_psc = new File();
			subCodeLength += ef_psc.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
			ef_cc = new File();
			subCodeLength += ef_cc.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
			ef_puid = new File();
			subCodeLength += ef_puid.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 10)) {
			ef_iap = new File();
			subCodeLength += ef_iap.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 11)) {
			ef_adn = new File();
			subCodeLength += ef_adn.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
			ef_pbc = new File();
			subCodeLength += ef_pbc.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
			ef_anr = new File();
			subCodeLength += ef_anr.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 14)) {
			ef_puri = new File();
			subCodeLength += ef_puri.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 15)) {
			ef_email = new File();
			subCodeLength += ef_email.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 16)) {
			ef_sne = new File();
			subCodeLength += ef_sne.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 17)) {
			ef_uid = new File();
			subCodeLength += ef_uid.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 18)) {
			ef_grp = new File();
			subCodeLength += ef_grp.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 19)) {
			ef_ccp1 = new File();
			subCodeLength += ef_ccp1.decode(is, false);
			if (subCodeLength == length.val) {
				return codeLength;
			}
		}
		throw new IOException("Unexpected end of sequence, length tag: " + length.val + ", actual sequence length: " + subCodeLength);

		
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	public String toString() {
		StringBuilder sb = new StringBuilder("SEQUENCE{");
		sb.append("phonebook_header: ").append(phonebook_header);
		
		sb.append(", ");
		sb.append("templateID: ").append(templateID);
		
		sb.append(", ");
		sb.append("df_phonebook: ").append(df_phonebook);
		
		if (ef_pbr != null) {
			sb.append(", ");
			sb.append("ef_pbr: ").append(ef_pbr);
		}
		
		if (ef_ext1 != null) {
			sb.append(", ");
			sb.append("ef_ext1: ").append(ef_ext1);
		}
		
		if (ef_aas != null) {
			sb.append(", ");
			sb.append("ef_aas: ").append(ef_aas);
		}
		
		if (ef_gas != null) {
			sb.append(", ");
			sb.append("ef_gas: ").append(ef_gas);
		}
		
		if (ef_psc != null) {
			sb.append(", ");
			sb.append("ef_psc: ").append(ef_psc);
		}
		
		if (ef_cc != null) {
			sb.append(", ");
			sb.append("ef_cc: ").append(ef_cc);
		}
		
		if (ef_puid != null) {
			sb.append(", ");
			sb.append("ef_puid: ").append(ef_puid);
		}
		
		if (ef_iap != null) {
			sb.append(", ");
			sb.append("ef_iap: ").append(ef_iap);
		}
		
		if (ef_adn != null) {
			sb.append(", ");
			sb.append("ef_adn: ").append(ef_adn);
		}
		
		if (ef_pbc != null) {
			sb.append(", ");
			sb.append("ef_pbc: ").append(ef_pbc);
		}
		
		if (ef_anr != null) {
			sb.append(", ");
			sb.append("ef_anr: ").append(ef_anr);
		}
		
		if (ef_puri != null) {
			sb.append(", ");
			sb.append("ef_puri: ").append(ef_puri);
		}
		
		if (ef_email != null) {
			sb.append(", ");
			sb.append("ef_email: ").append(ef_email);
		}
		
		if (ef_sne != null) {
			sb.append(", ");
			sb.append("ef_sne: ").append(ef_sne);
		}
		
		if (ef_uid != null) {
			sb.append(", ");
			sb.append("ef_uid: ").append(ef_uid);
		}
		
		if (ef_grp != null) {
			sb.append(", ");
			sb.append("ef_grp: ").append(ef_grp);
		}
		
		if (ef_ccp1 != null) {
			sb.append(", ");
			sb.append("ef_ccp1: ").append(ef_ccp1);
		}
		
		sb.append("}");
		return sb.toString();
	}

}


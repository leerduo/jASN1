/**
 * This class file was automatically generated by jASN1 v1.6.0 (http://www.openmuc.org)
 */

package org.openmuc.jasn1.compiler.someexamples.generated.pkix1explicit88;

import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.UnsupportedEncodingException;
import org.openmuc.jasn1.ber.*;
import org.openmuc.jasn1.ber.types.*;
import org.openmuc.jasn1.ber.types.string.*;

import org.openmuc.jasn1.compiler.someexamples.generated.teletexdomaindefinedattributes.*;
import org.openmuc.jasn1.compiler.someexamples.generated.rspdefinitions.*;
import org.openmuc.jasn1.compiler.someexamples.generated.pkix1implicit88.*;

public class PhysicalDeliveryCountryName {

	public byte[] code = null;
	public BerNumericString x121DccCode = null;

	public BerPrintableString iso3166Alpha2Code = null;

	public PhysicalDeliveryCountryName() {
	}

	public PhysicalDeliveryCountryName(byte[] code) {
		this.code = code;
	}

	public PhysicalDeliveryCountryName(BerNumericString x121DccCode, BerPrintableString iso3166Alpha2Code) {
		this.x121DccCode = x121DccCode;
		this.iso3166Alpha2Code = iso3166Alpha2Code;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {
		if (code != null) {
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
			return code.length;

		}
		int codeLength = 0;
		if (iso3166Alpha2Code != null) {
			codeLength += iso3166Alpha2Code.encode(os, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 1
			os.write(0x81);
			codeLength += 1;
			return codeLength;

		}
		
		if (x121DccCode != null) {
			codeLength += x121DccCode.encode(os, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 0
			os.write(0x80);
			codeLength += 1;
			return codeLength;

		}
		
		throw new IOException("Error encoding BerChoice: No item in choice was selected.");
	}

	public int decode(InputStream is, BerIdentifier berIdentifier) throws IOException {
		int codeLength = 0;
		BerIdentifier passedIdentifier = berIdentifier;

		if (berIdentifier == null) {
			berIdentifier = new BerIdentifier();
			codeLength += berIdentifier.decode(is);
		}

		BerLength length = new BerLength();
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 0)) {
			x121DccCode = new BerNumericString();
			codeLength += x121DccCode.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 1)) {
			iso3166Alpha2Code = new BerPrintableString();
			codeLength += iso3166Alpha2Code.decode(is, false);
			return codeLength;
		}

		if (passedIdentifier != null) {
			return 0;
		}
		throw new IOException("Error decoding BerChoice: Identifier matched to no item.");
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	public String toString() {
		if ( x121DccCode!= null) {
			return "CHOICE{x121DccCode: " + x121DccCode + "}";
		}

		if ( iso3166Alpha2Code!= null) {
			return "CHOICE{iso3166Alpha2Code: " + iso3166Alpha2Code + "}";
		}

		return "unknown";
	}

}

